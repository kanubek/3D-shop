@model Property
@{
    ViewData["Title"] = Model.Title;
}

<div class="property-detail-header">
    <div class="container">
        <nav class="breadcrumb">
            <a href="/">–ì–ª–∞–≤–Ω–∞—è</a> / <a href="/Property">–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</a> / @Model.Title
        </nav>
        <h1>@Model.Title</h1>
        <div class="property-meta">
            <span class="property-type">@Model.PropertyType</span>
            <span class="property-status">@Model.Status</span>
            @if (Model.Is3DGenerated)
            {
                <span class="badge badge-3d">üéØ 3D –º–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞</span>
            }
        </div>
    </div>
</div>

<div class="property-detail-content">
    <div class="container">
        <div class="property-layout">
            <div class="property-main">
                
                <!-- 3D –ú–æ–¥–µ–ª—å –∏–ª–∏ –≥–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
                <div class="media-section">
                    @if (Model.Is3DGenerated && !string.IsNullOrEmpty(Model.Model3DUrl))
                    {
                        <div class="model-3d-container">
                            <div class="model-3d-viewer" id="model3d">
                                <div class="model-placeholder">
                                    <h3>üéÆ 3D –ú–æ–¥–µ–ª—å</h3>
                                    <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è 3D –º–æ–¥–µ–ª—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ò–ò</p>
                                    <button class="btn btn-primary" onclick="load3DModel('@Model.Model3DUrl')">
                                        üöÄ –ó–∞–≥—Ä—É–∑–∏—Ç—å 3D –º–æ–¥–µ–ª—å
                                    </button>
                                </div>
                            </div>
                            <div class="model-controls">
                                <button class="btn btn-outline" onclick="resetCamera()">üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤–∏–¥</button>
                                <button class="btn btn-outline" onclick="toggleFullscreen()">üñ•Ô∏è –ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω</button>
                                <button class="btn btn-outline" onclick="takeScreenshot()">üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç</button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="image-gallery">
                            @if (Model.Images.Any())
                            {
                                foreach (var image in Model.Images.OrderBy(i => i.Order))
                                {
                                    <img src="@image.ImageUrl" alt="@Model.Title" class="@(image.IsPrimary ? "primary-image" : "")" />
                                }
                            }
                            else
                            {
                                <div class="no-images">
                                    <p>üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...</p>
                                </div>
                            }
                            
                            @if (!Model.Is3DGenerated)
                            {
                                <div class="ai-generation">
                                    <h4>ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è 3D –º–æ–¥–µ–ª–∏</h4>
                                    <p>–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–µ—Ç 3D –º–æ–¥–µ–ª—å</p>
                                    <button class="btn btn-primary" onclick="generate3D(@Model.Id)">
                                        üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é 3D
                                    </button>
                                    <div class="generation-progress" id="progress" style="display: none;">
                                        <div class="progress-bar">
                                            <div class="progress-fill"></div>
                                        </div>
                                        <p>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è 3D –º–æ–¥–µ–ª–∏... –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–º–µ—Ä–Ω–æ 2 –º–∏–Ω—É—Ç—ã</p>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>

                <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
                <div class="description-section">
                    <h2>üìã –û–ø–∏—Å–∞–Ω–∏–µ</h2>
                    <p>@Model.Description</p>
                </div>

                <!-- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ -->
                <div class="specs-section">
                    <h2>üìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h2>
                    <div class="specs-grid">
                        <div class="spec-item">
                            <span class="spec-label">–ü–ª–æ—â–∞–¥—å:</span>
                            <span class="spec-value">@Model.Area –º¬≤</span>
                        </div>
                        <div class="spec-item">
                            <span class="spec-label">–ö–æ–º–Ω–∞—Ç—ã:</span>
                            <span class="spec-value">@Model.Rooms</span>
                        </div>
                        @if (Model.Floor > 0)
                        {
                            <div class="spec-item">
                                <span class="spec-label">–≠—Ç–∞–∂:</span>
                                <span class="spec-value">@Model.Floor –∏–∑ @Model.TotalFloors</span>
                            </div>
                        }
                        <div class="spec-item">
                            <span class="spec-label">–¢–∏–ø:</span>
                            <span class="spec-value">@Model.PropertyType</span>
                        </div>
                        <div class="spec-item">
                            <span class="spec-label">–î–æ–±–∞–≤–ª–µ–Ω–æ:</span>
                            <span class="spec-value">@Model.CreatedAt.ToString("dd.MM.yyyy")</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="property-sidebar">
                <!-- –¶–µ–Ω–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã -->
                <div class="price-section">
                    <div class="price">@Model.Price.ToString("C0", new System.Globalization.CultureInfo("ru-RU"))</div>
                    <div class="price-per-meter">@((Model.Price / (decimal)Model.Area).ToString("C0", new System.Globalization.CultureInfo("ru-RU"))) –∑–∞ –º¬≤</div>
                </div>

                <div class="contact-section">
                    <h3>üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
                    <div class="contact-info">
                        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> @Model.ContactInfo</p>
                        <p><strong>–ê–¥—Ä–µ—Å:</strong> @Model.Address</p>
                    </div>
                    <div class="contact-actions">
                        <button class="btn btn-primary btn-full" onclick="showContactForm()">
                            üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º
                        </button>
                        <button class="btn btn-outline btn-full" onclick="addToFavorites(@Model.Id)">
                            ‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                        </button>
                        <button class="btn btn-outline btn-full" onclick="shareProperty(@Model.Id)">
                            üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                        </button>
                    </div>
                </div>

                @if (Model.Is3DGenerated)
                {
                    <div class="ai-info">
                        <h4>ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑</h4>
                        <div class="ai-features">
                            <div class="ai-feature">
                                <span class="ai-icon">‚úÖ</span>
                                <span>3D –º–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞</span>
                            </div>
                            <div class="ai-feature">
                                <span class="ai-icon">üéØ</span>
                                <span>–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å</span>
                            </div>
                            <div class="ai-feature">
                                <span class="ai-icon">‚ö°</span>
                                <span>–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function load3DModel(modelUrl) {
            const container = document.getElementById('model3d');
            container.innerHTML = '<div class="loading-3d"><h3>üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ 3D –º–æ–¥–µ–ª–∏...</h3><p>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</p></div>';
            
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ 3D –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ Three.js –∏–ª–∏ –¥—Ä—É–≥–æ–π –¥–≤–∏–∂–æ–∫
            setTimeout(() => {
                container.innerHTML = `
                    <div class="model-loaded">
                        <h3>üéÆ 3D –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞!</h3>
                        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º—ã—à—å –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è –∏ –∑—É–º</p>
                        <div class="fake-3d-viewer">
                            <div class="model-cube">üè†</div>
                        </div>
                    </div>
                `;
            }, 2000);
        }
        
        function generate3D(propertyId) {
            if (confirm('–ó–∞–ø—É—Å—Ç–∏—Ç—å –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—é 3D –º–æ–¥–µ–ª–∏? –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–π–º–µ—Ç 2-3 –º–∏–Ω—É—Ç—ã.')) {
                document.getElementById('progress').style.display = 'block';
                
                // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                let progress = 0;
                const interval = setInterval(() => {
                    progress += 2;
                    document.querySelector('.progress-fill').style.width = progress + '%';
                    
                    if (progress >= 100) {
                        clearInterval(interval);
                        alert('üéâ 3D –º–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
                        location.reload();
                    }
                }, 1000);
            }
        }
        
        function showContactForm() {
            alert('–ó–¥–µ—Å—å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Ñ–æ—Ä–º–∞ —Å–≤—è–∑–∏ —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º');
        }
        
        function addToFavorites(propertyId) {
            alert('–û–±—ä–µ–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!');
        }
        
        function shareProperty(propertyId) {
            if (navigator.share) {
                navigator.share({
                    title: '@Model.Title',
                    text: '@Model.Description',
                    url: window.location.href
                });
            } else {
                // Fallback
                navigator.clipboard.writeText(window.location.href);
                alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            }
        }
    </script>
}